const sessions = new Map();

async function getClientForSession(sessionId, userApiKey) {
  if (!userApiKey) {
    throw new Error("Missing API key");
  }

  let session = sessions.get(sessionId);

  if (!session) {
    const client = new MCPClient(userApiKey);
    await client.connectToServer(MCP_SERVER_SCRIPT);
    session = { client, lastUsed: Date.now() };
    sessions.set(sessionId, session);
  } else {
    session.lastUsed = Date.now();
  }

  return session.client;
}

app.post("/query", async (req, res) => {
  const sessionId = req.headers["x-session-id"];
  const userApiKey = req.headers["x-api-key"];

  if (!sessionId || !userApiKey) {
    return res.status(400).json({ error: "Session ID and API key are required" });
  }

  const body = req.body;
  if (!body || typeof body.query !== "string") {
    return res.status(400).json({ error: "Invalid request body" });
  }

  try {
    const client = await getClientForSession(sessionId, userApiKey);
    const response = await client.processQuery(body);
    res.json({ response });
  } catch (err) {
    console.error("Error processing query:", err);
    res.status(500).json({ error: "Error processing query" });
  }
});
